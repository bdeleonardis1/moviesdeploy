{"version":3,"sources":["App.js","index.js"],"names":["Modal","setAppElement","modalStyle","content","bottom","minHeight","left","padding","position","right","top","transform","minWidth","width","maxWidth","Table","columns","data","extraData","clicker","modal","useState","filterInput","setFilterInput","useTable","initialState","sortBy","id","desc","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","setFilter","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","pageIndex","state","className","value","onChange","e","target","undefined","placeholder","map","headerGroup","getHeaderGroupProps","headers","column","isSorted","isSortedDesc","getHeaderProps","getSortByToggleProps","render","row","onClick","getRowProps","cells","cell","getCellProps","disabled","length","type","defaultValue","Number","App","setColumns","setData","setExtraData","modalContent","setModalContent","React","modalIsOpen","setIsOpen","closeModal","useEffect","fetch","then","response","json","jsonResponse","isOpen","onRequestClose","contentLabel","style","extra","elements","i","el","push","key","name","includes","arr","split","src","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5cfa63b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport { useTable, useSortBy, usePagination, useFilters } from \"react-table\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"body\");\n\nconst modalStyle = {\n  content: {\n    bottom: \"auto\",\n    minHeight: \"10rem\",\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\",\n    transform: \"translate(-50%,-50%)\",\n    minWidth: \"20rem\",\n    width: \"80%\",\n    maxWidth: \"60rem\"\n  }\n};\n\nfunction App() {\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]);\n  const [extraData, setExtraData] = useState([]);\n  const [modalContent, setModalContent] = useState([]);\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  useEffect(() => {\n    fetch(\"/getrows\")\n      .then(response => {\n        return response.json();\n      })\n      .then(jsonResponse => {\n        setColumns(jsonResponse.columns);\n        setData(jsonResponse.data);\n        setExtraData(jsonResponse.extraData);\n      });\n  }, []);\n\n  function clicker(extra) {\n    var elements = [];\n\n    for (var i = 0; i < extra.length; i++) {\n      var el = extra[i];\n      if (el.type === \"p\") {\n        elements.push(<p key={el.name}>{el.data}</p>);\n      } else if (el.type === \"h1\") {\n        elements.push(<h1 key={el.name}>{el.data}</h1>);\n      } else if (el.type === \"h2\") {\n        elements.push(<h2 key={el.name}>{el.data}</h2>);\n      } else if (el.type === \"img\") {\n        if (el.data.includes(\"*\")) {\n          var arr = el.data.split(\"*\");\n          elements.push(<img key={el.name} src={arr[0]} width={arr[1]} />);\n        } else {\n          elements.push(<img key={el.name} src={el.data} width=\"200\" />);\n        }\n      }\n    }\n\n    setModalContent(<div>{elements}</div>);\n    openModal();\n  }\n\n  return (\n    <div className=\"App\">\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Example Modal\"\n        style={modalStyle}\n      >\n        <button className=\"close\" onClick={closeModal}>\n          X\n        </button>\n        {modalContent}\n      </Modal>\n      <Table\n        columns={columns}\n        data={data}\n        extraData={extraData}\n        setData={setData}\n        clicker={clicker}\n      />\n    </div>\n  );\n}\n\nfunction Table({ columns, data, extraData, modal, clicker }) {\n  const [filterInput, setFilterInput] = useState(\"\");\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"title\", value);\n    setFilterInput(value);\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    setFilter,\n\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex }\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { sortBy: [{ id: \"title\", desc: false }] }\n    },\n    useFilters,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <div className=\"movies\">\n      <input\n        className=\"search\"\n        value={filterInput || \"\"}\n        onChange={handleFilterChange}\n        placeholder={\"Search title\"}\n      />\n      <table className=\"main-table\" {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th\n                  className={\n                    column.isSorted ? (column.isSortedDesc ? \"up\" : \"down\") : \"\"\n                  }\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                >\n                  {column.render(\"Header\")}\n                  {column.isSorted ? (\n                    column.isSortedDesc ? (\n                      <span className=\"uparrow\">˄</span>\n                    ) : (\n                      <span className=\"downarrow\">˅</span>\n                    )\n                  ) : (\n                    \"\"\n                  )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map(row => {\n            prepareRow(row);\n            return (\n              <tr\n                onClick={() => clicker(extraData[row.id])}\n                {...row.getRowProps()}\n              >\n                {row.cells.map(cell => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      <div className=\"pagination\">\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {\"<\"}\n        </button>{\" \"}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {\">\"}\n        </button>{\" \"}\n        <span>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n        <span>\n          | Go to page:{\" \"}\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            className=\"goto\"\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(page);\n            }}\n          />\n        </span>{\" \"}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}